%pre

getInterfaceNameFromMAC() {
    interfaceName=$(ip -o link | awk '$(NF-2) == "'$1'" {print $2}')
    if [ -z "$interfaceName" ]
        then
            echo "Did not find interface name for given MAC: $1."
        exit 1
    fi
    echo ${interfaceName::-1}
}

san0=$(getInterfaceNameFromMAC "{{san_interface_0_mac_address}}")
nmcli dev connect $san0
sleep 2
ip route delete default dev $san0

if [ ! -f /tmp/anaconda_restart ]; then
    touch /tmp/anaconda_restart
    systemctl restart anaconda
fi

%end

bootloader --append=" crashkernel=auto" --location=mbr

autopart --type=lvm
clearpart --all
zerombr

# Use text mode install
text --non-interactive

# Use network installation
url --url=https://repo.almalinux.org/almalinux/8/BaseOS/x86_64/kickstart/

#use appstream branch
repo --name="AppStream" --baseurl=https://repo.almalinux.org/almalinux/8/AppStream/x86_64/kickstart/

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device={{wan_interface_0_mac_address}} --noipv6 --activate
network  --bootproto=ibft --device={{san_interface_0_mac_address}} --noipv6 --activate --nodefroute
network  --hostname={{instance_subdomain_permanent}}

# Root password
rootpw --plaintext {{initial_password}}
# SELinux configuration
selinux --disabled
# Run the Setup Agent on first boot
firstboot --disable
# Do not configure the X Window System
skipx
# System services
services --enabled="chronyd"
# System timezone
timezone UTC --isUtc --ntpservers={{ntp_server_ip_0}}
# Reboot the system after installation
reboot

%packages
@^minimal-environment
@standard
kexec-tools
acpid
#cloud-init
iptables-services
net-snmp
net-snmp-utils
iscsi-initiator-utils
chrony
python3
-firewalld
-firewalld-filesystem
-python-firewall
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post
# While the swappiness value of 30 is OK for desktop and development machines, for production servers you may need to set a lower value
echo "vm.swappiness=10" >> /etc/sysctl.conf

/bin/mkdir -p /root/.ssh
/bin/chmod 700 /root/.ssh

#This is to allow firewall management and other tasks such as installing software.
#each host has it's own private key-public key pair
/bin/echo -e '{{management_ssh_key}}' > /root/.ssh/authorized_keys
/bin/chmod 0400 /root/.ssh/*

#this is needed for ansible
alternatives --set python /usr/bin/python3


systemctl enable iptables
systemctl enable acpid
systemctl enable snmpd

#fetch this instance's snmp config
curl {{HTTP_SERVER_ENDPOINT}}/snmpd.conf -o /etc/snmp/snmpd.conf

%end

%post

cat>/etc/NetworkManager/dispatcher.d/99-san<<'EOF'
#!/bin/sh
san_iface_mac_address=$(cat /sys/firmware/ibft/ethernet0/mac)

interface=$1

iface_mac_address=$(cat /sys/class/net/"$interface"/address)
if [ "$iface_mac_address" = "$san_iface_mac_address" ]; then
    /sbin/ip route delete default dev "$interface"
fi
EOF
chmod +x /etc/NetworkManager/dispatcher.d/99-san

%end